@model IEnumerable<Cosmetic.Models.DeliverHistory>
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "发货审核";
    var page = (PagedList.IPagedList)Model;
    Cosmetic.Enums.CheckState tempState;
    string selState = "所有状态";
    int count = ViewBag.NoCheckCount;
    if (Enum.TryParse(Request["checkState"], out tempState))
    {
        selState = tempState.GetDisplayName();
    }

    Func<string, string> hidSidebar = s =>
    {
        var roles = s.Split(',').Where(x => !string.IsNullOrWhiteSpace(x));
        return roles.Any(x => User.IsInRole(x)) ? $"" : $"hidden";
    };
}

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                        @selState
                        @if (count > 0)
                        {
                            <span class="badge">@count</span>
                        }
                        <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        <li>
                            <a href="@Url.Action("Check")">
                                所有状态
                            </a>
                        </li>
                        @foreach (Cosmetic.Enums.CheckState item in Enum.GetValues(typeof(Cosmetic.Enums.CheckState)))
                        {
                            <li>
                                <a href="@Url.Action("Check",new {checkState= (int)item })">
                                    @item.GetDisplayName()
                                    @if (item == Cosmetic.Enums.CheckState.NoCheck && count > 0)
                                    {
                                        <span class="badge">@count</span>
                                    }
                                </a>
                            </li>
                        }
                    </ul>
                </li>
            </ul>

        </div>
    </div>
</nav>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Order.UserID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order.User.Rank)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order.Code)
            </th>
            <th>
                订单数量
            </th>
            <th>
                已发数量
            </th>
            <th>
                欠发数量
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Count)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Express)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckState)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckUser)
            </th>
            <th></th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(model => item.Order.User.RealName)
            </td>
            <td>
                @item.Order.User.Rank.GetDisplayName()
            </td>
            <td>
                @Html.DisplayFor(model => item.Order.Code)
            </td>
            <td>
                @Html.DisplayFor(model => item.Order.Count)
            </td>
            <td>
                @Html.DisplayFor(model => item.Order.Send)
            </td>
            <td>
                @(item.Order.Count-item.Order.Send)
            </td>
            <td>
                @Html.DisplayFor(model => item.Count)
            </td>
            <td>
                @Html.DisplayFor(model => item.Code)
            </td>
            <td>
                @Html.DisplayFor(model => item.Express)
            </td>
            <td>
                @Html.DisplayFor(model => item.Address)
            </td>
            <td>
                @Html.DisplayFor(model => item.CreateDateTime)
            </td>
            <td>
                @item.CheckState.GetDisplayName()
            </td>
            <td>
                @Html.DisplayFor(model => item.CheckTime)
            </td>
            <td>
                @Html.DisplayFor(model => item.CheckUser)
            </td>
            <td>
                <div class="@hidSidebar(SysRole.DeliverCheck)">
                    @if (item.CheckState == Cosmetic.Enums.CheckState.NoCheck)
                    {
                        <input type="button" value="确认发货" data-id="@item.ID" data-result="true" class="btn btn-default btn-group-xs send" />
                        <input type="button" value="取消发货" data-id="@item.ID" data-result="false" class="btn btn-default btn-group-xs send" />
                    }
                </div>
            </td>
        </tr>
    }
</table>

@Html.PageList(page, Url.PageUrl())

@section Scripts {
    @Scripts.Render("~/bundles/deliverCheck")
}