@model Cosmetic.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "重置密码";
    string c = "userEdit";
    if (ViewBag.Layout)
    {
        Layout = "~/Views/Shared/_LayoutHome.cshtml";
        c = "userEdithome";
    }
}

<div class="@c">
    <ol class="breadcrumb">
        <li>@Html.ActionLink("用户信息", "Details","User")</li>
        <li class="active">重置密码</li>
    </ol>
    <div class="title">
        <h2 class="text-center">重置密码</h2>
        <hr />
    </div>
    
    @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="submit" class="btn btn-default" value="重置" />
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
